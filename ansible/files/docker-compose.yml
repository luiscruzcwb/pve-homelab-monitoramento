# Compose Specification (sem necessidade de versão explícita)

volumes:
  prometheus_data: {}
  grafana_data: {}
  portainer_data: {}
  influxdb-data: {}
  uptimekuma_data: {}

services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - "9000:9000"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
      - alertmanager

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: '472'
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-strava-datasource'
      GF_FEATURE_TOGGLES_ENABLE: 'externalServiceAccounts'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      - prometheus

  speedtest-exporter:
    image: miguelndecarvalho/speedtest-exporter
    container_name: speedtest-exporter
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    environment:
      - SPEEDTEST_PORT=9798
      - SPEEDTEST_SERVER=
    ports:
      - "9798:9798"

  influxdb:
    image: influxdb:2.7-alpine
    container_name: influxdb
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
    ports:
      - "8086:8086"
      - "8082:8082"
      # UDP Port
      - "8089:8089/udp"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
  
  uptime-kuma:
      image: louislam/uptime-kuma:1
      container_name: uptime-kuma
      restart: unless-stopped
      labels:
      - com.centurylinklabs.watchtower.enable=true #Wathtower 
      environment:
        - NODE_ENV=production
        - DB_ENGINE=sqlite
        - SQLITE_FILE=/app/data/uptime-kuma.db
        - TZ=America/Sao_Paulo
      volumes:
        - ./uptime_data:/app/data
      ports:
        - 3001:3001
        
  #beszel:
  #  image: henrygd/beszel:latest
  #  container_name: beszel
  #  restart: unless-stopped
  #      labels:
  #    - com.centurylinklabs.watchtower.enable=true #Wathtower 
  #  ports:
  #    - 8090:8090
  #  volumes:
  #    - ./beszel_data:/beszel_data
  #    - ./beszel_socket:/beszel_socket

  

